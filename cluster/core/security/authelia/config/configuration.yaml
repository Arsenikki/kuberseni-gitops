server:
  ## The address to listen on.
  host: 0.0.0.0
  ## The port to listen on.
  port: 9091
log:
  ## Level of verbosity for logs: info, debug, trace.
  level: debug
  format: json
  keep_stdout: true

jwt_secret: ${SECRET_AUTHELIA_JWT}

default_redirection_url: https://auth.${SECRET_DOMAIN}

totp:
  issuer: authelia.com
  period: 30
  skew: 1

authentication_backend:
  password_reset:
    disable: true
  refresh_interval: 5m
  file:
    path: /config/users.yaml
    password:
      algorithm: argon2
      argon2:
        variant: argon2id
        iterations: 1
        key_length: 32
        salt_length: 16
        memory: 1024
        parallelism: 8

# https://docs.authelia.com/configuration/access-control.html
access_control:
  default_policy: deny
  rules:
    # Rules applied to everyone
    - domain: auth.${SECRET_DOMAIN}
      policy: bypass
    - domain: "*.${SECRET_DOMAIN}"
      policy: one_factor
    - domain: "${SECRET_DOMAIN}"
      policy: one_factor

session:
  name: authelia_session
  # This secret can also be set using the env variables AUTHELIA_SESSION_SECRET_FILE
  # Used a different secret, but the same site as jwt_secret above.
  # secret: SECRET_GOES_HERE # use docker secret file instead AUTHELIA_SESSION_SECRET_FILE
  expiration: 3600 # 1 hour
  inactivity: 300 # 5 minutes
  domain: ${SECRET_DOMAIN} # Should match whatever your root protected domain is

# Optional. Can improve performance on a busy system. If not enabled, session info is stored in memory.
#  redis:
#    host: redis
#    port: 6379
    # This secret can also be set using the env variables AUTHELIA_SESSION_REDIS_PASSWORD_FILE
    # password: authelia

regulation:
  max_retries: 3
  find_time: 120
  ban_time: 300

storage:
  postgres:
    username: authelia
    host: authelia-postgres.default.svc.cluster.local
    database: authelia
    port: 5432

notifier:
  filesystem:
    filename: /config/notifications.txt