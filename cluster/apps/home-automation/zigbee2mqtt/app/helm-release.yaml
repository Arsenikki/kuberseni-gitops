---
# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: zigbee2mqtt
  namespace: home-automation
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-charts
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: mosquitto
      namespace: home-automation
  values:
    controller:
      type: statefulset
    image:
      repository: ghcr.io/koenkk/zigbee2mqtt
      tag: 1.35.3
    env:
      TZ: Europe/London
      ZIGBEE2MQTT_DATA: /config
      ZIGBEE2MQTT_CONFIG_ADVANCED_HOMEASSISTANT_DISCOVERY_TOPIC: homeassistant
      ZIGBEE2MQTT_CONFIG_ADVANCED_HOMEASSISTANT_LEGACY_ENTITY_ATTRIBUTES: "false"
      ZIGBEE2MQTT_CONFIG_ADVANCED_HOMEASSISTANT_LEGACY_TRIGGERS: "false"
      ZIGBEE2MQTT_CONFIG_ADVANCED_HOMEASSISTANT_STATUS_TOPIC: homeassistant/status
      ZIGBEE2MQTT_CONFIG_ADVANCED_LAST_SEEN: ISO_8601
      ZIGBEE2MQTT_CONFIG_ADVANCED_LEGACY_API: "false"
      ZIGBEE2MQTT_CONFIG_ADVANCED_LEGACY_AVAILABILITY_PAYLOAD: "false"
      ZIGBEE2MQTT_CONFIG_ADVANCED_LOG_LEVEL: debug
      ZIGBEE2MQTT_CONFIG_ADVANCED_LOG_OUTPUT: '["console"]'
      ZIGBEE2MQTT_CONFIG_AVAILABILITY_ACTIVE_TIMEOUT: 60
      ZIGBEE2MQTT_CONFIG_AVAILABILITY_PASSIVE_TIMEOUT: 2000
      ZIGBEE2MQTT_CONFIG_DEVICE_OPTIONS_LEGACY: "false"
      ZIGBEE2MQTT_CONFIG_DEVICE_OPTIONS_RETAIN: "true"
      ZIGBEE2MQTT_CONFIG_EXPERIMENTAL_NEW_API: "true"
      ZIGBEE2MQTT_CONFIG_HOMEASSISTANT: "true"
      ZIGBEE2MQTT_CONFIG_MQTT_INCLUDE_DEVICE_INFORMATION: "true"
      ZIGBEE2MQTT_CONFIG_MQTT_KEEPALIVE: 60
      ZIGBEE2MQTT_CONFIG_MQTT_REJECT_UNAUTHORIZED: "true"
      ZIGBEE2MQTT_CONFIG_MQTT_SERVER: mqtt://mosquitto.home-automation.svc.cluster.local
      ZIGBEE2MQTT_CONFIG_SERIAL_PORT: "tcp://192.168.1.137:8888"
      ZIGBEE2MQTT_CONFIG_SERIAL_ADAPTER: ezsp
    service:
      main:
        ports:
          http:
            port: 8080
    ingress:
      main:
        enabled: true
        annotations:
          # Automatically generate TLS certificate
          kubernetes.io/tls-acme: "true"
          # Use forward-auth middleware for authentication
          traefik.ingress.kubernetes.io/router.middlewares: "traefik-forward-auth@kubernetescrd"
          # Let external-dns manage cloudflare DNS records
          external-dns/is-public: "true"
        hosts:
          - host: zigbee.${SECRET_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
        tls:
          - secretName: zigbee2mqtt-tls
            hosts:
              - zigbee.${SECRET_DOMAIN}
    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: OnRootMismatch
    volumeClaimTemplates:
      - name: config
        mountPath: /config
        accessMode: ReadWriteOnce
        size: 1Gi
        storageClass: longhorn-fast-replicated
    resources:
      requests:
        cpu: 10m
        memory: 100Mi
      limits:
        memory: 500Mi
    addons:
      codeserver:
        enabled: true
        image:
          repository: ghcr.io/coder/code-server
          tag: 4.9.1
          pullPolicy: IfNotPresent
        env:
          TZ: "Europe/London"
        args:
          - --auth
          - "none"
          - --user-data-dir
          - "/config/.vscode"
          - --extensions-dir
          - "/config/.vscode"
        volumeMounts:
          - name: config
            mountPath: /config
        ingress:
          enabled: true
          annotations:
            # Automatically generate TLS certificate
            kubernetes.io/tls-acme: "true"
            # Use forward-auth middleware for authentication
            traefik.ingress.kubernetes.io/router.middlewares: "traefik-forward-auth@kubernetescrd"
            # Let external-dns manage cloudflare DNS records
            external-dns/is-public: "true"
          hosts:
            - host: "code.zigbee.${SECRET_DOMAIN}"
              paths:
                - path: /
                  pathType: Prefix
          tls:
            - secretName: zigbee-vscode-tls
              hosts:
                - "code.zigbee.${SECRET_DOMAIN}"
